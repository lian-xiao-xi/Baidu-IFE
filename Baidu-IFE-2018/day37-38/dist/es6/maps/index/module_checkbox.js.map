{"version":3,"sources":["index/module_checkbox.ts"],"names":[],"mappings":";;;IAEA;;;OAGG;IACH,yBAAgC,UAAmB;QACjD,IAAI,OAAO,GAA2C,KAAK,CAAC,IAAI,CAAC,CAAC,eAAM,CAAC,UAAU,EAAE,0BAA0B,CAAC,CAAC,CAAC,CAAA;QAClH,IAAI,WAAW,GAAuC,UAAU,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAA;QAC9G,+DAA+D;QAE/D,6BAA6B;QAC7B,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,KAAK;YAClD,IAAI,SAAS,GAAG,KAAK,CAAC,MAAiB,CAAC;YACxC,IAAI,SAAS,CAAC,OAAO,CAAC,iBAAiB,EAAE,KAAK,OAAO,IAAI,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;gBAAE,OAAM;aAAE;YAElH,MAAM,QAAQ,GAAW,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAC9D,QAAQ,QAAQ,EAAE;gBAChB,KAAK,MAAM;oBACT,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,CAAA;oBACtC,MAAM;gBACR,KAAK,UAAU;oBACb,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;oBAC5B,MAAM;aACT;QACH,CAAC,CAAC,CAAA;QAEF,UAAU,CAAC,OAAO,CAAC,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;IAEpG,CAAC;IAvBD,0CAuBC;IAED;;OAEG;IACH,oBAAoB,OAA2B;QAC7C,IAAI,QAAQ,GAAW,CAAC,CAAC;QACzB,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACvB,IAAI,CAAC,OAAO,IAAI,EAAE,QAAQ,CAAA;QAC5B,CAAC,CAAC,CAAA;QACF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;OAGG;IACH,mBAAmB,CAAQ,EAAE,OAA2B,EAAE,WAA6B;QACrF,IAAI,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,CAAA;QAC7B,YAAY;QACZ,6DAA6D;QAC7D,0CAA0C;QAC1C,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,kBAAkB;YAClB,CAAC,CAAC,cAAc,EAAE,CAAC;SACpB;QACD,MAAM,OAAO,GAAW,OAAO,CAAC,MAAM,CAAC;QACvC,oFAAoF;QACpF,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAA;IAC5E,CAAC;IAED;;;OAGG;IACH,qBAAqB,CAAQ,EAAE,OAA2B;QACxD,wDAAwD;QACxD,IAAI,UAAU,CAAC,OAAO,CAAC,KAAK,OAAO,CAAC,MAAM,EAAE;YAC1C,CAAC,CAAC,cAAc,EAAE,CAAA;SACnB;aAAM;YACL,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,CAAC,CAAC,CAAA;SACH;IACH,CAAC","file":"../../index/module_checkbox.js","sourcesContent":["import {getEle} from '../common/common'\r\n\r\n/**\r\n * 给一组checkbox绑定click事件，实现全选功能\r\n * @param wapperId 一组复选框容器的元素\r\n */\r\nexport function bindClickHandle(wrapperEle: Element) {\r\n  let elesArr: HTMLInputElement[] = <HTMLInputElement[]>Array.from((getEle(wrapperEle, 'input[data-check=\"item\"]')))\r\n  let checkallEle: HTMLInputElement = <HTMLInputElement>wrapperEle.querySelector('input[data-check=\"checkall\"]')\r\n  // let wrapperEle: Element = document.getElementById(wapperId);\r\n\r\n  // 这里需要绑定click事件，不能绑定change事件\r\n  wrapperEle.addEventListener('click', function (event) {\r\n    let targetEle = event.target as Element;\r\n    if (targetEle.tagName.toLocaleLowerCase() !== 'input' || targetEle.getAttribute('type') !== 'checkbox') { return }\r\n\r\n    const dataType: string = targetEle.getAttribute('data-check');\r\n    switch (dataType) {\r\n      case 'item':\r\n        itemClick(event, elesArr, checkallEle)\r\n        break;\r\n      case 'checkall':\r\n        setCheckAll(event, elesArr);\r\n        break;\r\n    }\r\n  })\r\n\r\n  checkedLen(elesArr) === elesArr.length ? checkallEle.checked = true : checkallEle.checked = false;\r\n\r\n}\r\n\r\n/**\r\n * 返回当前子选项 checkbox 中选中的数量\r\n */\r\nfunction checkedLen(elesArr: HTMLInputElement[]): number {\r\n  let checkLen: number = 0;\r\n  elesArr.forEach((item) => {\r\n    item.checked && ++checkLen\r\n  })\r\n  return checkLen;\r\n}\r\n\r\n/**\r\n * 点击子选项 checkbox 执行的事件\r\n * 参数 elesArr 为所有子选项checkbox的元素集合\r\n */\r\nfunction itemClick(e: Event, elesArr: HTMLInputElement[], checkallEle: HTMLInputElement) {\r\n  let len = checkedLen(elesArr)\r\n  // 不允许一个都不勾选\r\n  // 因为点击事件开始执行之后，对应的type=\"checkbox\" 的 input 的checked属性变为false；\r\n  // 所以下面应该是 if(len === 0) 而不是 if(len === 1)\r\n  if (len === 0) {\r\n    // 使相应的check变为选中状态\r\n    e.preventDefault();\r\n  }\r\n  const elesLen: number = elesArr.length;\r\n  // 根据被选中的checkbox数量是否等于所有子项目checkbox（去除全选checkbox剩下的checkbox）的数量，来决定是否把全选checkbox给选中\r\n  len === elesLen ? checkallEle.checked = true : checkallEle.checked = false\r\n}\r\n\r\n/**\r\n * 点击全选checkbox执行的方法\r\n * 参数 elesArr 为所有子选项checkbox的元素集合  \r\n */\r\nfunction setCheckAll(e: Event, elesArr: HTMLInputElement[]) {\r\n  // 如果子选项checkbox已经全部被选中（此时全选checkbox也应该已经被选中），则点击全选按钮无反应\r\n  if (checkedLen(elesArr) === elesArr.length) {\r\n    e.preventDefault()\r\n  } else {\r\n    elesArr.forEach(item => {\r\n      item.checked = true;\r\n    })\r\n  }\r\n}\r\n"]}