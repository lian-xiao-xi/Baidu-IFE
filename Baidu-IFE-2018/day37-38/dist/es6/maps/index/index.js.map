{"version":3,"sources":["index/index.ts"],"names":[],"mappings":"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","file":"../../index/index.js","sourcesContent":["import { getEle } from '../common/common'\nimport { bindClickHandle } from './module_checkbox'\nimport { renderData, getCheckVal } from './module_render'\nimport { saveData, editData } from './module_edit'\n\ninspectState()\nbindClickHandle(document.getElementById('region-radio-wrapper'))\nbindClickHandle(document.getElementById('product-radio-wrapper'))\n\nfunction inspectState() {\n  const historyState = window.history.state;\n  \n  if (Object.prototype.toString.call(historyState) === '[object Object]' && historyState.checkboxState) {\n    let state = historyState.checkboxState;\n    console.log('url 状态 ---> ', state)\n    // 下面注释的部分应该有问题\n    let times: number = 0;\n    for (const key in state) {\n      if (state.hasOwnProperty(key)) {\n        const element: any[] = state[key];\n        if(Array.isArray(element)) {\n          const groupWrappper = getEle(document, '#page-form .radio-wrapper')[times];\n          checkCheckbox(element, Array.from(getEle(groupWrappper, '.checkbox-group')));\n          times++;\n        }\n\n      }\n    }\n  } else {\n    getEle(document, '#page-form .radio-wrapper').forEach(item => {\n      (<HTMLInputElement>getEle(item, '.checkbox-group input[type=\"checkbox\"]')[0]).checked = true;\n    })\n  }\n\n}\n\nfunction checkCheckbox(state: any[], checkGroup: Element[]) {\n  for (const item of state) {\n    for (const checkbox of checkGroup) {\n      let input: HTMLInputElement = getEle(checkbox, 'input[type=\"checkbox\"]')[0] as HTMLInputElement;\n      if (input.value.trim() === item) {\n        input.checked = true;\n      } \n    }\n  }\n}\n\n\nrenderData()\nformChangeHandle()\neditData()\n\n/**\n * 给页面中的元素绑定相关事件\n */\nfunction formChangeHandle() {\n  // 给form表单绑定change事件\n  getEle(document, '#page-form')[0].addEventListener('change', function (event) {\n    const targetEle = event.target as Element;\n    if (targetEle.tagName.toLocaleLowerCase() !== 'input' || targetEle.getAttribute('type') !== 'checkbox') { return; }\n    window.history.replaceState({checkboxState: getCheckVal()}, document.title, '');\n    renderData()\n    editData()\n  });\n  // 给保存按钮绑定click事件\n  getEle(document, '#save-table')[0].addEventListener('click', function (event) {\n    saveData()\n  })\n  // 给取消按钮绑定click事件\n  getEle(document, '#esc-save')[0].addEventListener('click', function () {\n    renderData()\n  })\n}\n\n"]}